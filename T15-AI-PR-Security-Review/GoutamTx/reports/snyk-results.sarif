{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver" : {"name" : "SnykCode","semanticVersion" : "1.1299.0","version" : "1.1299.0","informationUri" : "https://docs.snyk.io/","rules" : [{"id": "javascript/CodeInjection","name": "CodeInjection","shortDescription": {"text": "Code Injection"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.","text": ""},"properties": {"tags": ["javascript","CodeInjection","Security","SourceServer","SourceHttpBody","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/lvn/botstrap/commit/aafeaca53e8d89eb950d8e9c3af8874dc90686ec?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "var config = require(configFile);\n","lineNumber": 17,"lineChange": "removed"},{"line": "var config = JSON.parse(fs.readFileSync(configFile));\n","lineNumber": 17,"lineChange": "added"}]},{"commitURL": "https://github.com/noppa/ng-hot-reload/commit/5de61299a0a7aa602fe015ac9f2ff3af3f798348?diff=split#diff-8f9d1530fa118465c523a517c5f4cac4ec173f17b820514034dc39e588415f63L-1","lines": [{"line": "var update = event.data;\r\n","lineNumber": 4,"lineChange": "removed"},{"line": "new Function(update)();\r\n","lineNumber": 5,"lineChange": "removed"},{"line": "var data = event.data ? JSON.parse(event.data) : {};\r\n","lineNumber": 4,"lineChange": "added"},{"line": "console.log('msg', data);\r\n","lineNumber": 5,"lineChange": "added"},{"line": "if (data.message === 'reload') {\r\n","lineNumber": 6,"lineChange": "added"},{"line": "    var script = document.createElement('script');\r\n","lineNumber": 7,"lineChange": "added"},{"line": "    var query = '?t=' + Date.now();\r\n","lineNumber": 8,"lineChange": "added"},{"line": "    script.src = 'http://localhost:' + options.port + '/' + data.src + query;\r\n","lineNumber": 9,"lineChange": "added"},{"line": "    document.body.appendChild(script);\r\n","lineNumber": 10,"lineChange": "added"},{"line": "}\r\n","lineNumber": 11,"lineChange": "added"}]},{"commitURL": "https://github.com/hizzgdev/jsmind/commit/8063742e591d7765a6c96a29b91af1ac4adeeba8?diff=split#diff-053107ea442600706ba811ac9afc51a58f7b9c86fa9f374b46c5c3c29a58287aL-1","lines": [{"line": "var data = eval('('+xhr.responseText+')');\n","lineNumber": 876,"lineChange": "removed"},{"line": "var data = jm.util.json.string2json(xhr.responseText);\n","lineNumber": 876,"lineChange": "added"},{"line": "if(data != null){\n","lineNumber": 877,"lineChange": "added"},{"line": "    callback(data);\n","lineNumber": 878,"lineChange": "none"},{"line": "}else{\n","lineNumber": 879,"lineChange": "added"},{"line": "    callback(xhr.responseText);\n","lineNumber": 880,"lineChange": "added"},{"line": "}\n","lineNumber": 881,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 149,"cwe": ["CWE-94"]}},{"id": "javascript/CommandInjection","name": "CommandInjection","shortDescription": {"text": "Command Injection"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.","text": ""},"properties": {"tags": ["javascript","CommandInjection","Security","SourceServer","SourceHttpBody","<unknown>","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/mbostock/git-static/commit/89f5dcc9a74458f2956e6afd343beab4e5154472?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "  exec(\"git cat-file blob \" + sha + \":\" + file, {cwd: repository, encoding: \"binary\"}, function(error, stdout, stderr) {\n","lineNumber": 12,"lineChange": "removed"},{"line": "    if (error) return callback(error);\n","lineNumber": 13,"lineChange": "removed"},{"line": "    callback(null, stdout);\n","lineNumber": 14,"lineChange": "removed"},{"line": "  var git = child.spawn(\"git\", [\"cat-file\", \"blob\", sha + \":\" + file], {cwd: repository}),\n","lineNumber": 12,"lineChange": "added"},{"line": "      data = [],\n","lineNumber": 13,"lineChange": "added"},{"line": "      exit;\n","lineNumber": 14,"lineChange": "added"},{"line": "\n","lineNumber": 15,"lineChange": "added"},{"line": "  git.stdout.on(\"data\", function(chunk) {\n","lineNumber": 16,"lineChange": "added"},{"line": "    data.push(chunk);\n","lineNumber": 17,"lineChange": "added"},{"line": "  });\n","lineNumber": 18,"lineChange": "added"},{"line": "\n","lineNumber": 19,"lineChange": "added"},{"line": "  git.on(\"exit\", function(code) {\n","lineNumber": 20,"lineChange": "added"},{"line": "    exit = code;\n","lineNumber": 21,"lineChange": "added"},{"line": "  });\n","lineNumber": 22,"lineChange": "added"},{"line": "\n","lineNumber": 23,"lineChange": "added"},{"line": "  git.on(\"close\", function() {\n","lineNumber": 24,"lineChange": "added"},{"line": "    if (exit > 0) return callback(error(exit));\n","lineNumber": 25,"lineChange": "added"},{"line": "    callback(null, Buffer.concat(data));\n","lineNumber": 26,"lineChange": "added"}]},{"commitURL": "https://github.com/skpm/child_process/commit/ddf84f16469c6c1f57c6f15d1d4d77a3073ab8fe?diff=split#diff-572a16d586ad1b7c257729b47e3a55f30d627a31c81f5bd039a1a2d5201b665bL-1","lines": [{"line": "var whichChild = spawnSync('/bin/bash', ['-l', '-c', 'which ' + opts.file], {encoding: 'utf8'})\n","lineNumber": 9,"lineChange": "removed"},{"line": "var whichChild = spawnSync(\n","lineNumber": 9,"lineChange": "added"},{"line": "  '/bin/bash',\n","lineNumber": 10,"lineChange": "added"},{"line": "  ['-l', '-c', 'which ' + opts.file],\n","lineNumber": 11,"lineChange": "added"},{"line": "  { encoding: 'utf8' }\n","lineNumber": 12,"lineChange": "added"},{"line": ")\n","lineNumber": 13,"lineChange": "added"}]},{"commitURL": "https://github.com/andrehrf/hawk/commit/04d22c8199f0edd12f6df1eb4891702bfe91db6f?diff=split#diff-40a91579d9cf4bd2a35f59bcd5c8ab5ca53872990acb34aaed31acfb247bf184L-1","lines": [{"line": "case \"stats\": mongodb.collection(\"updaters\").update({\"_id\": id}, {$set: {\"pid\": thread.pid, \"stats\": data}}, function(err, result){}); break;\n","lineNumber": 106,"lineChange": "removed"},{"line": "case \"stats\": \n","lineNumber": 92,"lineChange": "added"},{"line": "    data[\"cpus\"] = require('os').cpus().length;   \n","lineNumber": 93,"lineChange": "added"},{"line": "    mongodb.collection(\"updaters\").update({\"_id\": id}, {$set: {\"pid\": thread.pid, \"stats\": data}}, function(err, result){}); \n","lineNumber": 94,"lineChange": "added"},{"line": "break;\n","lineNumber": 95,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 50,"cwe": ["CWE-78"]}},{"id": "javascript/XSS","name": "XSS","shortDescription": {"text": "Cross-site Scripting (XSS)"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.","text": ""},"properties": {"tags": ["javascript","XSS","Security","SourceServer","SourceHttpParam","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/nategood/httpful/commit/56bece201beeae6d80ed23a1195f7ab685dfde0c?diff=split#diff-27153a4cc821a38fb1466ae1c19c9f48fdc8b5028f971c1f88fd3d36af3081d2L-1","lines": [{"line": "\n","lineNumber": 6,"lineChange": "removed"},{"line": "    res.writeHead(200);\n","lineNumber": 7,"lineChange": "removed"},{"line": "    res.writeHead(200, {\"Content-Type\":\"application/json\"});\n","lineNumber": 6,"lineChange": "added"},{"line": "    req.on('data', function(data){\n","lineNumber": 8,"lineChange": "none"},{"line": "        echo += data;\n","lineNumber": 9,"lineChange": "none"},{"line": "    });\n","lineNumber": 10,"lineChange": "none"},{"line": "    req.on('end', function(){\n","lineNumber": 11,"lineChange": "none"},{"line": "\t\tres.write(\n","lineNumber": 12,"lineChange": "none"},{"line": "\t\t\tJSON.stringify({\n","lineNumber": 13,"lineChange": "none"}]},{"commitURL": "https://github.com/mjackson/unpkg/commit/db53a296aafebe18b854a0da2d4e09fb39e2aca8?diff=split#diff-efedef52a9612fa34544d4ad8a68232d242c481eaa0de73b416064cf5c5c4cb6L-1","lines": [{"line": "    return res.status(403).send(`Invalid URL: ${req.url}`)\n","lineNumber": 21,"lineChange": "removed"},{"line": "    return res.status(403).type('text').send(`Invalid URL: ${req.url}`)\n","lineNumber": 21,"lineChange": "added"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "  // Do not allow unrecognized query parameters because\n","lineNumber": 23,"lineChange": "none"},{"line": "  // some people use them to bust the cache.\n","lineNumber": 24,"lineChange": "none"},{"line": "  if (!queryIsValid(url.query))\n","lineNumber": 25,"lineChange": "none"},{"line": "    return res.status(403).send(`Invalid query: ${JSON.stringify(url.query)}`)\n","lineNumber": 26,"lineChange": "removed"},{"line": "    return res.status(403).type('text').send(`Invalid query: ${JSON.stringify(url.query)}`)\n","lineNumber": 26,"lineChange": "added"}]},{"commitURL": "https://github.com/angular-cms/angular-cms/commit/49e3845bf11f21e5f63997ed4c522cfa923c89a7?diff=split#diff-2458b7a314e52c34fd950457c17939524367c06572e8c78acfce08e6a6293e68L-1","lines": [{"line": "res.send(result);\n","lineNumber": 20,"lineChange": "removed"},{"line": "res.status(httpStatus.OK).json(result);\n","lineNumber": 21,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 339,"cwe": ["CWE-79"]}},{"id": "javascript/reDOS","name": "reDOS","shortDescription": {"text": "Regular Expression Denial of Service (ReDoS)"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.","text": ""},"properties": {"tags": ["javascript","reDOS","Security","SourceServer","SourceRequestUrl","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/passbolt/passbolt_browser_extension/commit/b41d81ad653a880b09f2ac9ef5732726e448d219?diff=split#diff-bb2af03a5383ab66270372d437427ef8af4a149710d7d6e5938548c6d5f3b8c5L-1","lines": [{"line": "\n","lineNumber": 27,"lineChange": "removed"},{"line": "  // Retrieve the setup bootstrap regex.\n","lineNumber": 28,"lineChange": "removed"},{"line": "  passbolt.request('passbolt.config.read', 'setupBootstrapRegex')\n","lineNumber": 29,"lineChange": "removed"},{"line": "    .then(function (setupBootstrapRegex) {\n","lineNumber": 30,"lineChange": "removed"},{"line": "  const uuidRegex = \"[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[0-5][a-fA-F0-9]{3}-[089aAbB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}\";\n","lineNumber": 27,"lineChange": "added"},{"line": "  const setupBootstrapRegex = `(.*)\\/setup\\/(install|recover)\\/(${uuidRegex})\\/(${uuidRegex})`;\n","lineNumber": 28,"lineChange": "added"},{"line": "  var regex = new RegExp(setupBootstrapRegex),\n","lineNumber": 31,"lineChange": "none"}]},{"commitURL": "https://github.com/XiaoMi/hiui/commit/488dd61cefe176af7097dfd7a3448bd190ecffff?diff=split#diff-ddbcffeff01d66de820d5badf769d19b42b8564953784470c52ad68cbc4b83f1L-1","lines": [{"line": "return this.isRemote() || (!searchable || !keyword) || (searchable && keyword && (String(item.id).match(keyword) || String(item.name).match(keyword)))\n","lineNumber": 407,"lineChange": "removed"},{"line": "return this.isRemote() || (!searchable || !keyword) || (searchable && keyword && (String(item.id).includes(keyword) || String(item.name).includes(keyword)))\n","lineNumber": 407,"lineChange": "added"}]},{"commitURL": "https://github.com/infor-design/enterprise/commit/51c32f05c358e7e01ca5b246c067299cd7993c1c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1","lines": [{"line": "new RegExp('_' + type + '\\\\.scss'),\n","lineNumber": 344,"lineChange": "removed"},{"line": "new RegExp('(\\d|\\w|\\s|-)*?\\.(scss)'),\n","lineNumber": 344,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 84,"cwe": ["CWE-400"]}},{"id": "python/PT","name": "PT","shortDescription": {"text": "Path Traversal"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```","text": ""},"properties": {"tags": ["python","PT","Security","SourceNonServer","SourceLocalEnv","SourceCLI","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56?diff=split#diff-70a9940f7965191dc6ca548a38cd1bde7ec7ceaf10f26ca454cd4223d5d50fa9L-1","lines": [{"line": "    return os.path.join(DATAROOT, obj_path)\n","lineNumber": 122,"lineChange": "removed"},{"line": "    return safe_join(DATAROOT, obj_path)\n","lineNumber": 123,"lineChange": "added"},{"line": "\n","lineNumber": 124,"lineChange": "none"},{"line": "\n","lineNumber": 125,"lineChange": "none"},{"line": "def _get_index_absolute_path(index):\n","lineNumber": 126,"lineChange": "none"},{"line": "    return os.path.join(INDEXDIR, index)\n","lineNumber": 126,"lineChange": "none"},{"line": "\n","lineNumber": 128,"lineChange": "none"},{"line": "\n","lineNumber": 129,"lineChange": "none"},{"line": "@scope_blueprint.route('/obj/<path:obj_path>')\n","lineNumber": 130,"lineChange": "none"},{"line": "def get_object_src_http(obj_path):\n","lineNumber": 131,"lineChange": "none"},{"line": "    path = _get_obj_absolute_path(obj_path)\n","lineNumber": 132,"lineChange": "none"},{"line": "\n","lineNumber": 133,"lineChange": "none"},{"line": "    headers = Headers()\n","lineNumber": 134,"lineChange": "none"},{"line": "    # With add_etags=True, conditional=True\n","lineNumber": 135,"lineChange": "none"},{"line": "    # Flask should be smart enough to do 304 Not Modified\n","lineNumber": 136,"lineChange": "none"},{"line": "    response = send_file(path,\n","lineNumber": 137,"lineChange": "none"}]},{"commitURL": "https://github.com/fonttools/fonttools/commit/0b99c8968e04e2e36c6c46ad8bb1a550d25969b4?diff=split#diff-e8b6161353c7ce5b13e62df1da329a85de0ef80ce8f039d283c25bf892b2b600L-1","lines": [{"line": "\n","lineNumber": 16,"lineChange": "added"},{"line": "destdir = None\n","lineNumber": 17,"lineChange": "added"},{"line": "if sys.argv[1:]:\n","lineNumber": 18,"lineChange": "added"},{"line": "\tdestdir = os.path.normpath(os.path.join(os.getcwd(), sys.argv[1]))\n","lineNumber": 19,"lineChange": "added"},{"line": "\tassert os.path.isdir(destdir), \"destination is not an existing directory\"\n","lineNumber": 20,"lineChange": "added"},{"line": "\n","lineNumber": 21,"lineChange": "added"},{"line": "os.chdir(wdir)\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "tar = src + \".tar\"\n","lineNumber": 24,"lineChange": "none"},{"line": "gz = tar + \".gz\"\n","lineNumber": 25,"lineChange": "none"},{"line": "tgz = src + \".tgz\"\n","lineNumber": 19,"lineChange": "none"},{"line": "\n","lineNumber": 26,"lineChange": "none"},{"line": "print \"source:\", src\n","lineNumber": 27,"lineChange": "none"},{"line": "print \"dest:\", tgz\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "os.system('tar --exclude=CVS --exclude=%s -cf %s %s' % (scriptname, tar, src))\n","lineNumber": 30,"lineChange": "none"},{"line": "os.system('gzip -9v %s' % tar)\n","lineNumber": 31,"lineChange": "none"},{"line": "os.rename(gz, tgz)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\n","lineNumber": 32,"lineChange": "added"},{"line": "if destdir:\n","lineNumber": 33,"lineChange": "added"},{"line": "\tprint \"destination directory:\", destdir\n","lineNumber": 34,"lineChange": "added"},{"line": "\tos.system('mv %s %s' % (gz, destdir))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"}]},{"commitURL": "https://github.com/Guad/fuwa/commit/955baf1c0e8824f08a96e48a350ee3cd0e3c5493?diff=split#diff-568470d013cd12e4f388206520da39ab9a4e4c3c6b95846cbc281abc1ba3c959L-1","lines": [{"line": "import string, random\n","lineNumber": 1,"lineChange": "removed"},{"line": "import string, random, hashlib, os\n","lineNumber": 1,"lineChange": "added"},{"line": "from werkzeug import secure_filename\n","lineNumber": 2,"lineChange": "added"},{"line": "\n","lineNumber": 3,"lineChange": "added"},{"line": "#Load config file\n","lineNumber": 4,"lineChange": "added"},{"line": "config = {}\n","lineNumber": 5,"lineChange": "added"},{"line": "with open('config.ini', 'r') as file:\n","lineNumber": 6,"lineChange": "added"},{"line": "\tfor line in file.read().splitlines():\n","lineNumber": 7,"lineChange": "added"},{"line": "\t\tline = line.split('==')\n","lineNumber": 8,"lineChange": "added"},{"line": "\t\tconfig[line[0]] = line[1]\n","lineNumber": 9,"lineChange": "added"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "app = flask.Flask(__name__) #Initialize our application\n","lineNumber": 11,"lineChange": "none"},{"line": "app.config['MAX_CONTENT_LENGTH'] = 10 * 1024 * 1024 #Set the upload limit to 10MiB\n","lineNumber": 12,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "def genHash(seed): #Generate five letter filenames for our files\n","lineNumber": 15,"lineChange": "none"},{"line": "    base = string.ascii_lowercase+string.digits \n","lineNumber": 16,"lineChange": "none"},{"line": "    random.seed(seed)\n","lineNumber": 17,"lineChange": "none"},{"line": "    hash_value = \"\"\n","lineNumber": 18,"lineChange": "none"},{"line": "    for i in range(5):\n","lineNumber": 19,"lineChange": "none"},{"line": "        hash_value += random.choice(base)\n","lineNumber": 20,"lineChange": "none"},{"line": "    return hash_value\n","lineNumber": 21,"lineChange": "none"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "@app.route('/', methods=['GET', 'POST'])\n","lineNumber": 24,"lineChange": "none"},{"line": "def index():\n","lineNumber": 25,"lineChange": "none"},{"line": "\tif flask.request.method == 'POST':\n","lineNumber": 26,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 27,"lineChange": "none"},{"line": "\t\t\tFile upload happens here.\n","lineNumber": 28,"lineChange": "none"},{"line": "\t\t\tWe get your filename and convert it to our hash with your extension.\n","lineNumber": 29,"lineChange": "none"},{"line": "\t\t\tThen we redirect to the file itself.\n","lineNumber": 30,"lineChange": "none"},{"line": "\t\t\"\"\"\n","lineNumber": 31,"lineChange": "none"},{"line": "\t\tf = flask.request.files['file']\n","lineNumber": 32,"lineChange": "none"},{"line": "\t\textension = f.filename.split('.')[-1]\n","lineNumber": 24,"lineChange": "removed"},{"line": "\t\tfilename = genHash(f.filename) + '.' + extension\n","lineNumber": 25,"lineChange": "removed"},{"line": "\t\tf.save('static/files/%s' % filename)\n","lineNumber": 26,"lineChange": "removed"},{"line": "\t\tprint 'Uploaded file \\'%s\\'' % filename #Log what file was uploaded\n","lineNumber": 27,"lineChange": "removed"},{"line": "\t\treturn flask.redirect(flask.url_for('getFile', filename=filename))\n","lineNumber": 28,"lineChange": "removed"},{"line": "\t\t\n","lineNumber": 33,"lineChange": "added"},{"line": "\t\thasher = hashlib.md5() \t\t\n","lineNumber": 34,"lineChange": "added"},{"line": "\t\tbuf = f.read()\t\t   \t\t\n","lineNumber": 35,"lineChange": "added"},{"line": "\t\tf.seek(0) #Set cursor back to position 0 so we can read it again in the save function.\n","lineNumber": 36,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# We hash the file to get its filename.\t   \t\t\n","lineNumber": 37,"lineChange": "added"},{"line": "\t\t\t\t\t\t\t\t\t# So that we can upload two different images with the same filename,\n","lineNumber": 38,"lineChange": "added"},{"line": "\t\thasher.update(buf)\t   \t\t# But not two same images with different filenames.\n","lineNumber": 39,"lineChange": "added"},{"line": "\t\tdirname = genHash(hasher.hexdigest())\n","lineNumber": 40,"lineChange": "added"},{"line": "\t\tif not os.path.exists(\"static/files/%s\" % dirname): # Check if the folder already exists\n","lineNumber": 41,"lineChange": "added"},{"line": "\t\t\tos.mkdir('static/files/%s' % dirname) #Make it\n","lineNumber": 42,"lineChange": "added"},{"line": "\t\t\tf.save('static/files/%s/%s' % (dirname, secure_filename(f.filename)))\n","lineNumber": 43,"lineChange": "added"},{"line": "\t\t\tprint 'Uploaded file \\'%s\\'' % secure_filename(f.filename) #Log what file was uploaded\n","lineNumber": 44,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('getFile', dirname=dirname,filename=secure_filename(f.filename)))\n","lineNumber": 45,"lineChange": "added"},{"line": "\t\telse:\n","lineNumber": 46,"lineChange": "added"},{"line": "\t\t\tflask.flash('File already exists in %s!' % dirname) #Display a message for the user.\n","lineNumber": 47,"lineChange": "added"},{"line": "\t\t\treturn flask.redirect(flask.url_for('index'))\n","lineNumber": 48,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 180,"cwe": ["CWE-23"]}},{"id": "javascript/DisablePoweredBy","name": "DisablePoweredBy","shortDescription": {"text": "Information Exposure"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.","text": ""},"properties": {"tags": ["javascript","DisablePoweredBy","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/lucasweng/yelp-camp/commit/f4e907734aea3ec98000d61f5d49c729a95cb77c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1","lines": [{"line": "      app            = express(),\n","lineNumber": 1,"lineChange": "none"},{"line": "      bodyParser     = require(\"body-parser\"),\n","lineNumber": 2,"lineChange": "none"},{"line": "      mongoose       = require(\"mongoose\"),\n","lineNumber": 3,"lineChange": "none"},{"line": "      helmet         = require(\"helmet\"),\n","lineNumber": 4,"lineChange": "added"},{"line": "      flash          = require(\"connect-flash\"),\n","lineNumber": 5,"lineChange": "none"},{"line": "      session        = require(\"express-session\"),\n","lineNumber": 6,"lineChange": "none"},{"line": "      moment         = require(\"moment\"),\n","lineNumber": 7,"lineChange": "none"},{"line": "      passport       = require(\"passport\"),\n","lineNumber": 8,"lineChange": "none"},{"line": "      LocalStrategy  = require(\"passport-local\"),\n","lineNumber": 9,"lineChange": "none"},{"line": "      methodOverride = require(\"method-override\"),\n","lineNumber": 10,"lineChange": "none"},{"line": "      User           = require(\"./models/user\");\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "// requiring routes     \n","lineNumber": 13,"lineChange": "none"},{"line": "const indexRoute      = require(\"./routes/index\"),\n","lineNumber": 14,"lineChange": "none"},{"line": "      campgroundRoute = require(\"./routes/campgrounds\"),\n","lineNumber": 15,"lineChange": "none"},{"line": "      commentRoute    = require(\"./routes/comments\"),\n","lineNumber": 16,"lineChange": "none"},{"line": "      userRoute       = require(\"./routes/user\"),\n","lineNumber": 17,"lineChange": "none"},{"line": "      passwordRoute   = require(\"./routes/password\");\n","lineNumber": 18,"lineChange": "none"},{"line": "\n","lineNumber": 19,"lineChange": "none"},{"line": "// connect to the DB\n","lineNumber": 20,"lineChange": "none"},{"line": "let url = process.env.DATABASEURL || \"mongodb://localhost/yelp_camp_v13\"; // fallback in case global var not working\n","lineNumber": 21,"lineChange": "none"},{"line": "mongoose.connect(url, {useMongoClient: true});\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "app.set(\"view engine\", \"ejs\");\n","lineNumber": 24,"lineChange": "none"},{"line": "app.use(helmet());\n","lineNumber": 25,"lineChange": "added"}]},{"commitURL": "https://github.com/infor-design/enterprise/commit/20888f176d6bccc41b009a54b2d47a2b29845db3?diff=split#diff-322f0482bd28fc40f84fcb0aaf208fef7fb63082d462cf02d11f46e59c531c24L-1","lines": [{"line": "const app = express();\n","lineNumber": 9,"lineChange": "none"},{"line": "const BASE_PATH = process.env.BASEPATH || '/';\n","lineNumber": 10,"lineChange": "none"},{"line": "const packageJSON = getJSONFile('../../../package.json');\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "app.set('view engine', 'html');\n","lineNumber": 13,"lineChange": "none"},{"line": "app.set('views', path.resolve(__dirname, 'views'));\n","lineNumber": 14,"lineChange": "none"},{"line": "app.set('basepath', BASE_PATH);\n","lineNumber": 15,"lineChange": "none"},{"line": "app.disable('x-powered-by');\n","lineNumber": 16,"lineChange": "added"}]},{"commitURL": "https://github.com/galtenberg/evernote-random/commit/32109271055df8a60bf4dafe289b717dbb950305?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L-1","lines": [{"line": "const csp = require('helmet-csp')\n","lineNumber": 5,"lineChange": "added"},{"line": "\n","lineNumber": 6,"lineChange": "none"},{"line": "const app = express()\n","lineNumber": 7,"lineChange": "none"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "app.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n","lineNumber": 9,"lineChange": "none"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "// parse application/x-www-form-urlencoded\n","lineNumber": 11,"lineChange": "none"},{"line": "app.use(bodyParser.urlencoded({ extended: false }))\n","lineNumber": 12,"lineChange": "none"},{"line": "// json parser\n","lineNumber": 13,"lineChange": "none"},{"line": "app.use(bodyParser.json())\n","lineNumber": 14,"lineChange": "none"},{"line": "// Serve static assets\n","lineNumber": 15,"lineChange": "none"},{"line": "app.use(express.static(path.resolve(__dirname, '..', 'build')))\n","lineNumber": 15,"lineChange": "none"},{"line": "\n","lineNumber": 17,"lineChange": "none"},{"line": "// Re-enable on glitch.com\n","lineNumber": 18,"lineChange": "none"},{"line": "// Always return the main index.html, so react-router render the route in the client\n","lineNumber": 19,"lineChange": "none"},{"line": "//app.get('*', (req, res) => {\n","lineNumber": 19,"lineChange": "none"},{"line": "  //res.sendFile(path.resolve(__dirname, '..', 'build', 'index.html'));\n","lineNumber": 21,"lineChange": "none"},{"line": "//})\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "app.use(cookieSession({\n","lineNumber": 24,"lineChange": "none"},{"line": "  name: 'evernoteSolitaire',\n","lineNumber": 25,"lineChange": "none"},{"line": "  secret: 'evernote-sandbox-secret',\n","lineNumber": 26,"lineChange": "none"},{"line": "  maxAge: 30 * 24 * 60 * 60 * 1000 // 1 month\n","lineNumber": 27,"lineChange": "none"},{"line": "}))\n","lineNumber": 28,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "//require('./api/experiment')(app)\n","lineNumber": 29,"lineChange": "none"},{"line": "require('./api/auth')(app)\n","lineNumber": 30,"lineChange": "none"},{"line": "require('./api/notes')(app)\n","lineNumber": 31,"lineChange": "none"},{"line": "\n","lineNumber": 32,"lineChange": "none"},{"line": "const PORT = process.env.PORT || 8000\n","lineNumber": 33,"lineChange": "removed"},{"line": "app.use(bodyParser.json({\n","lineNumber": 33,"lineChange": "added"},{"line": "  type: ['json', 'application/csp-report']\n","lineNumber": 34,"lineChange": "added"},{"line": "}))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"},{"line": "app.post('/report-violation', function (req, res) {\n","lineNumber": 37,"lineChange": "added"},{"line": "  if (req.body) {\n","lineNumber": 38,"lineChange": "added"},{"line": "    console.log('CSP Violation: ', req.body)\n","lineNumber": 39,"lineChange": "added"},{"line": "  } else {\n","lineNumber": 40,"lineChange": "added"},{"line": "    console.log('CSP Violation: No data received!')\n","lineNumber": 41,"lineChange": "added"},{"line": "  }\n","lineNumber": 42,"lineChange": "added"},{"line": "  res.status(204).end()\n","lineNumber": 43,"lineChange": "added"},{"line": "})\n","lineNumber": 44,"lineChange": "added"},{"line": "\n","lineNumber": 45,"lineChange": "added"},{"line": "const PORT = 8000 //process.env.PORT || 8000\n","lineNumber": 46,"lineChange": "added"},{"line": "\n","lineNumber": 47,"lineChange": "added"},{"line": "app.use(csp({\n","lineNumber": 48,"lineChange": "added"},{"line": "  directives: {\n","lineNumber": 49,"lineChange": "added"},{"line": "    defaultSrc: [\"'self'\"],\n","lineNumber": 50,"lineChange": "added"},{"line": "    scriptSrc: [\"'unsafe-inline'\"],\n","lineNumber": 51,"lineChange": "added"},{"line": "    styleSrc: [\"'unsafe-inline'\"],\n","lineNumber": 52,"lineChange": "added"},{"line": "    reportUri: '/report-violation',\n","lineNumber": 53,"lineChange": "added"},{"line": "    upgradeInsecureRequests: true\n","lineNumber": 54,"lineChange": "added"},{"line": "  },\n","lineNumber": 55,"lineChange": "added"},{"line": "  reportOnly: false,\n","lineNumber": 56,"lineChange": "added"},{"line": "  loose: true,\n","lineNumber": 57,"lineChange": "added"},{"line": "  setAllHeaders: true,\n","lineNumber": 58,"lineChange": "added"},{"line": "  browserSniff: false\n","lineNumber": 59,"lineChange": "added"},{"line": "}))\n","lineNumber": 60,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 416,"cwe": ["CWE-200"]}},{"id": "javascript/HardcodedNonCryptoSecret","name": "HardcodedNonCryptoSecret","shortDescription": {"text": "Hardcoded Secret"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.","text": ""},"properties": {"tags": ["javascript","HardcodedNonCryptoSecret","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1","lines": [{"line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n","lineNumber": 2,"lineChange": "removed"},{"line": "accessKeyId: '',\n","lineNumber": 1,"lineChange": "added"},{"line": "secretAccessKey: '',\n","lineNumber": 2,"lineChange": "added"}]},{"commitURL": "https://github.com/leohmoraes/rocketseat-02/commit/69e888ed7c779a0fbb0d0c08a219afa11b3913bd?diff=split#diff-04122576a4101a4ed68c79faa4f4605c44d8fd93252cff9e64ba66ab9c561e86L-1","lines": [{"line": "secret: '9dffij39asf23nsfnsvsdsa',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]},{"commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1","lines": [{"line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n","lineNumber": 1,"lineChange": "removed"},{"line": "secret: process.env.APP_SECRET,\n","lineNumber": 1,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 100,"cwe": ["CWE-547"]}},{"id": "javascript/HttpToHttps","name": "HttpToHttps","shortDescription": {"text": "Cleartext Transmission of Sensitive Information"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.","text": ""},"properties": {"tags": ["javascript","HttpToHttps","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/REBELinBLUE/deployer/commit/bdb2c9750c497c9bc025580ce5bf5b8a6972de17?diff=split#diff-112ac233b1e3314b31d86e70dd54fd358cf3e246c38a63bf2e3085a47a0d6cf3L-1","lines": [{"line": "var redis = new Redis();\n","lineNumber": 9,"lineChange": "removed"},{"line": "var redis = new Redis({\n","lineNumber": 9,"lineChange": "added"},{"line": "    db: ENV.REDIS_DATBASE || 0\n","lineNumber": 10,"lineChange": "added"},{"line": "});\n","lineNumber": 11,"lineChange": "added"},{"line": "\n","lineNumber": 12,"lineChange": "added"},{"line": "if (!/^https/i.test(process.env.SOCKET_URL)) {\n","lineNumber": 13,"lineChange": "added"},{"line": "\n","lineNumber": 14,"lineChange": "added"},{"line": "    var ssl_conf = {\n","lineNumber": 15,"lineChange": "added"},{"line": "        key:  (process.env.SOCKET_SSL_KEY_FILE  ? fs.readFileSync(process.env.SOCKET_SSL_KEY_FILE)  : null),\n","lineNumber": 16,"lineChange": "added"},{"line": "        cert: (process.env.SOCKET_SSL_CERT_FILE ? fs.readFileSync(process.env.SOCKET_SSL_CERT_FILE) : null),\n","lineNumber": 17,"lineChange": "added"},{"line": "        ca:   (process.env.SOCKET_SSL_CA_FILE   ? fs.readFileSync(process.env.SOCKET_SSL_CA_FILE)   : null)\n","lineNumber": 18,"lineChange": "added"},{"line": "    };\n","lineNumber": 19,"lineChange": "added"},{"line": "\n","lineNumber": 20,"lineChange": "added"},{"line": "    var app = require('https').createServer(ssl_conf, handler);\n","lineNumber": 21,"lineChange": "added"},{"line": "} else {\n","lineNumber": 22,"lineChange": "added"},{"line": "    var app = require('http').createServer(handler);\n","lineNumber": 23,"lineChange": "added"},{"line": "}\n","lineNumber": 24,"lineChange": "added"}]},{"commitURL": "https://github.com/medic/couch2pg/commit/062eaa0f53d2cd2327232a695c60bf4c9fd589f6?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "var httplib = require('http');\n","lineNumber": 1,"lineChange": "removed"},{"line": "var httplib = require('https');\n","lineNumber": 1,"lineChange": "added"}]},{"commitURL": "https://github.com/Rich-Harris/packd/commit/c14d17da80ed075ee007de3121422fb2c5b77e4d?diff=split#diff-1821d11fbffbab2187701c42616688d46bf66d7b2cf6eaf363548dd66caa6ebaL-1","lines": [{"line": "const http = require( 'http' );\n","lineNumber": 0,"lineChange": "removed"},{"line": "const https = require( 'https' );\n","lineNumber": 0,"lineChange": "added"},{"line": "\n","lineNumber": 1,"lineChange": "none"},{"line": "module.exports = function get ( url ) {\n","lineNumber": 2,"lineChange": "none"},{"line": "\treturn new Promise( ( fulfil, reject ) => {\n","lineNumber": 3,"lineChange": "none"},{"line": "\t\thttp.get( url, response => {\n","lineNumber": 4,"lineChange": "removed"},{"line": "\t\thttps.get( url, response => {\n","lineNumber": 4,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 122,"cwe": ["CWE-319"]}},{"id": "javascript/InsecureHash","name": "InsecureHash","shortDescription": {"text": "Use of Password Hash With Insufficient Computational Effort"},"defaultConfiguration": {"level": "note"},"help": {"markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.","text": ""},"properties": {"tags": ["javascript","InsecureHash","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/mafintosh/hyperlog/commit/d93cc65e485d740face1dacffa66dbcf03bcc7c3?diff=split#diff-b29a862e995b5e16d1763a35604cec4f13f3ca08bb9318d8f7ccfa24b757f7e0L-1","lines": [{"line": "return crypto.createHash('sha1')\n","lineNumber": 3,"lineChange": "removed"},{"line": "return crypto.createHash('sha256')\n","lineNumber": 3,"lineChange": "added"}]},{"commitURL": "https://github.com/raphael-group/magi/commit/1e1ed6435a97858e38d0cab962d7e248710f60e1?diff=split#diff-a4bd8e7c606b00ad2f2d6eeb95ba96714ece5c8b1266c2b503f3531b12d46257L-1","lines": [{"line": "hasher = crypto.createHash('md5').update(url),\n","lineNumber": 7,"lineChange": "removed"},{"line": "hasher = crypto.createHash('RIPEMD-64').update(url),\n","lineNumber": 7,"lineChange": "added"}]},{"commitURL": "https://github.com/steilerDev/homebridge-openhab2-complete/commit/6e92ef40f991cc372b701390945e0e5bbeb71016?diff=split#diff-34bbd467b1ab0e3497ce244b09d2bfbc4ab192303dd90b13603baf6711b522dfL-1","lines": [{"line": "function generate(name) {\n","lineNumber": 4,"lineChange": "removed"},{"line": "    const sha1sum = crypto.createHash('sha1');\n","lineNumber": 5,"lineChange": "removed"},{"line": "    sha1sum.update(name);\n","lineNumber": 6,"lineChange": "removed"},{"line": "function generate(name, type) {\n","lineNumber": 4,"lineChange": "added"},{"line": "    const hash = crypto.createHash('sha512');\n","lineNumber": 5,"lineChange": "added"},{"line": "    hash.update(name);\n","lineNumber": 6,"lineChange": "added"},{"line": "    hash.update(type);\n","lineNumber": 7,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 134,"cwe": ["CWE-916"]}},{"id": "javascript/NoHardcodedPasswords","name": "NoHardcodedPasswords","shortDescription": {"text": "Use of Hardcoded Passwords"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\n\nDevelopers may use hardcoded passwords during development to streamline setup or simplify authentication while testing. Although these passwords are intended to be removed before deployment, they are sometimes inadvertently left in the code. This introduces serious security risks, especially if the password grants elevated privileges or is reused across multiple systems.\n\nAn attacker who discovers a hardcoded password can potentially gain unauthorized access, escalate privileges, exfiltrate sensitive data, or disrupt service availability. If the password is reused across different environments or applications, the compromise can spread quickly and broadly.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.","text": ""},"properties": {"tags": ["javascript","NoHardcodedPasswords","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/UsabilityDynamics/node-rabbit-client/commit/bf652950ac5eb1cd85ebe349b29ad045df51dd07?diff=split#diff-506a1dcb4e0d34ef96430d0fa0790cc3e84cbf193ea91b3e49e5e52c86dad0f4L-1","lines": [{"line": "login        : 'udx',\n","lineNumber": 5,"lineChange": "removed"},{"line": "password     : 'ISM0Rules'\n","lineNumber": 6,"lineChange": "removed"},{"line": "login        : process.env.RABBIT_LOGIN,\n","lineNumber": 5,"lineChange": "added"},{"line": "password     : process.env.RABBIT_PASSWORD\n","lineNumber": 6,"lineChange": "added"}]},{"commitURL": "https://github.com/perborgen/data_hub/commit/8de6d9c7efdc6d0a773808c872c83f3374643a8e?diff=split#diff-58417e0f781b6656949d37258c8b9052ed266e2eb7a5163cad7b0863e6b2916aL-1","lines": [{"line": "var config  = require('./config');\n","lineNumber": 2,"lineChange": "none"},{"line": "var handler = require('./api/handler');\n","lineNumber": 3,"lineChange": "none"},{"line": "var inert   = require('inert');\n","lineNumber": 4,"lineChange": "none"},{"line": "var bell    = require('bell');\n","lineNumber": 5,"lineChange": "none"},{"line": "var hapiAC  = require('hapi-auth-cookie');\n","lineNumber": 6,"lineChange": "none"},{"line": "\n","lineNumber": 7,"lineChange": "none"},{"line": "server.connection({\n","lineNumber": 8,"lineChange": "none"},{"line": "    port: process.env.PORT || 8080,\n","lineNumber": 9,"lineChange": "none"},{"line": "    host: \"0.0.0.0\" || \"localhost\"\n","lineNumber": 10,"lineChange": "none"},{"line": "});\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "server.register([inert, bell, hapiAC], function(err){\n","lineNumber": 13,"lineChange": "none"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "    if (err) {\n","lineNumber": 15,"lineChange": "none"},{"line": "        throw err;\n","lineNumber": 16,"lineChange": "none"},{"line": "    }\n","lineNumber": 17,"lineChange": "none"},{"line": "\n","lineNumber": 18,"lineChange": "none"},{"line": "    var authCookieOptions = {\n","lineNumber": 19,"lineChange": "none"},{"line": "        password: 'cookie-encryption-password', //Password used for encryption\n","lineNumber": 20,"lineChange": "removed"},{"line": "        cookie: 'sitepoint-auth', // Name of cookie to set\n","lineNumber": 21,"lineChange": "removed"},{"line": "        password: config.password || process.env.PASSWORD, //Password used for encryption\n","lineNumber": 20,"lineChange": "added"},{"line": "        cookie: 'auth', // Name of cookie to set\n","lineNumber": 21,"lineChange": "added"}]},{"commitURL": "https://github.com/Gitualize/Gitualize/commit/f6de5689d637dc41abd4b43eea40371fd1088d33?diff=split#diff-273ae97b30b3f18c1d3fc9bf418b55be30c6e4a19f3f51953362cfa762980c63L-1","lines": [{"line": "user: 'docker',\n","lineNumber": 2,"lineChange": "removed"},{"line": "password: 'docker',\n","lineNumber": 3,"lineChange": "removed"},{"line": "database: 'docker',\n","lineNumber": 4,"lineChange": "removed"},{"line": "user: process.env.DATABASE_USER,\n","lineNumber": 2,"lineChange": "added"},{"line": "password: process.env.DATABASE_PASSWORD,\n","lineNumber": 3,"lineChange": "added"},{"line": "database: process.env.DATABASE_NAME,\n","lineNumber": 4,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 44,"cwe": ["CWE-798","CWE-259"]}},{"id": "javascript/NoRateLimitingForExpensiveWebOperation","name": "NoRateLimitingForExpensiveWebOperation","shortDescription": {"text": "Allocation of Resources Without Limits or Throttling"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.","text": ""},"properties": {"tags": ["javascript","NoRateLimitingForExpensiveWebOperation","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/vmware/singleton/commit/cb488fd0cd75e7b1f122784bdaf5ee6a85cd5323?diff=split#diff-dd8084200629fa5980243a6f7566cf5f42710c5ca3bdc612dbcc330c57333577L-1","lines": [{"line": "// set up rate limiter: maximum of five requests per minute\n","lineNumber": 7,"lineChange": "added"},{"line": "const RateLimit = require('express-rate-limit');\n","lineNumber": 8,"lineChange": "added"},{"line": "const limiter = RateLimit({\n","lineNumber": 9,"lineChange": "added"},{"line": "  windowMs: 1 * 60 * 1000, // 1 minute\n","lineNumber": 10,"lineChange": "added"},{"line": "  max: 5\n","lineNumber": 11,"lineChange": "added"},{"line": "});\n","lineNumber": 12,"lineChange": "added"},{"line": "\n","lineNumber": 13,"lineChange": "added"},{"line": "const app = express();\n","lineNumber": 14,"lineChange": "none"},{"line": "const port = process.env.PORT || 3000;\n","lineNumber": 15,"lineChange": "none"},{"line": "\n","lineNumber": 16,"lineChange": "none"},{"line": "app.use(express.static(__dirname));\n","lineNumber": 10,"lineChange": "removed"},{"line": "// apply rate limiter to all requests\n","lineNumber": 17,"lineChange": "added"},{"line": "app.use(limiter);\n","lineNumber": 18,"lineChange": "added"},{"line": "\n","lineNumber": 19,"lineChange": "added"},{"line": "app.use ('/dist',express.static(__dirname + '/dist/'));\n","lineNumber": 20,"lineChange": "added"},{"line": "\n","lineNumber": 21,"lineChange": "added"},{"line": "app.use ('/assets',express.static(__dirname + '/assets/'));\n","lineNumber": 22,"lineChange": "added"},{"line": "\n","lineNumber": 23,"lineChange": "added"},{"line": "app.use ('/src/translations',express.static(__dirname + '/src/translations'));\n","lineNumber": 24,"lineChange": "added"},{"line": "\n","lineNumber": 25,"lineChange": "none"},{"line": "app.get('/', (req, res) => {\n","lineNumber": 26,"lineChange": "none"},{"line": "  res.send(`Welcome to the static localizer. Navigate to /example`);\n","lineNumber": 27,"lineChange": "none"},{"line": "});\n","lineNumber": 28,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "app.get('/example', (req, res) => {\n","lineNumber": 30,"lineChange": "none"}]},{"commitURL": "https://github.com/natsukagami/themis-web-interface/commit/e1ef34f8b95e7eefab54c204b78fbdee70169a6d?diff=split#diff-cd0e12b228a7dea99a7346adf68cfc7a6a2c321846cc8a90fc6cd92cf8066d5eL-1","lines": [{"line": "router.post('/', (req, res, next) => {\n","lineNumber": 8,"lineChange": "removed"},{"line": "const rateLimiter = require('../controls/rate-limiter')({\n","lineNumber": 8,"lineChange": "added"},{"line": "\t// Allow 3 submits, then slows down\n","lineNumber": 9,"lineChange": "added"},{"line": "\tfreeRetries: 30,\n","lineNumber": 10,"lineChange": "added"},{"line": "\tminWait: 2 * 60 * 60,\n","lineNumber": 11,"lineChange": "added"},{"line": "\tmaxWait: 2 * 60 * 60,\n","lineNumber": 12,"lineChange": "added"},{"line": "\tlifetime: 60 * 60\n","lineNumber": 13,"lineChange": "added"},{"line": "});\n","lineNumber": 14,"lineChange": "added"},{"line": "\n","lineNumber": 15,"lineChange": "added"},{"line": "router.post('/', rateLimiter.prevent, (req, res, next) => {\n","lineNumber": 16,"lineChange": "added"}]},{"commitURL": "https://github.com/Waifu-pics/waifu-api/commit/da0d3b4ee8dd4e2ab0a789dfd04cb304a537368e?diff=split#diff-0eddd48e85f4f98a238d49bfe0b4cf514b1430322bcdc196b1a97786e0ec30c8L-1","lines": [{"line": "const rateLimit = require(\"express-rate-limit\")\n","lineNumber": 4,"lineChange": "added"},{"line": "\n","lineNumber": 5,"lineChange": "none"},{"line": "module.exports = ({ db, app, config, s3 }) => {\n","lineNumber": 6,"lineChange": "none"},{"line": "\n","lineNumber": 7,"lineChange": "added"},{"line": "    // Checking if user is Admin to prevent rate limit middleware\n","lineNumber": 8,"lineChange": "added"},{"line": "    const chkAdmin = async (req, res, next) => {\n","lineNumber": 9,"lineChange": "added"},{"line": "        const { token } = req.headers\n","lineNumber": 10,"lineChange": "added"},{"line": "        const Admins = db.collection('admins')\n","lineNumber": 11,"lineChange": "added"},{"line": "        req.chkAdmin = Boolean(req.headers.token && typeof token === \"string\" && Boolean(await Admins.findOne({token})))\n","lineNumber": 12,"lineChange": "added"},{"line": "        \n","lineNumber": 13,"lineChange": "added"},{"line": "        next()\n","lineNumber": 14,"lineChange": "added"},{"line": "    }\n","lineNumber": 15,"lineChange": "added"},{"line": "\n","lineNumber": 16,"lineChange": "added"},{"line": "    // Rate limit middleware\n","lineNumber": 17,"lineChange": "added"},{"line": "    const limiter = rateLimit({\n","lineNumber": 18,"lineChange": "added"},{"line": "        windowMs: 10 * 60 * 1000, // 10 minutes\n","lineNumber": 19,"lineChange": "added"},{"line": "        max: 15,\n","lineNumber": 20,"lineChange": "added"},{"line": "        message: \"You can only upload 15 files per 10 minutes!\",\n","lineNumber": 21,"lineChange": "added"},{"line": "        statusCode: 400,\n","lineNumber": 22,"lineChange": "added"},{"line": "        skip: function (req) {\n","lineNumber": 23,"lineChange": "added"},{"line": "            return req.chkAdmin\n","lineNumber": 24,"lineChange": "added"},{"line": "        }\n","lineNumber": 25,"lineChange": "added"},{"line": "    })\n","lineNumber": 26,"lineChange": "added"},{"line": "\n","lineNumber": 27,"lineChange": "added"},{"line": "    // Do shit to upload\n","lineNumber": 28,"lineChange": "added"},{"line": "    app.use(\"/api/upload\", chkAdmin, limiter)\n","lineNumber": 29,"lineChange": "added"},{"line": "\n","lineNumber": 30,"lineChange": "added"},{"line": "    app.use(fileUpload({\n","lineNumber": 31,"lineChange": "none"},{"line": "        limits: { fileSize: config.maxUploadSize * 1024 * 1024 },\n","lineNumber": 32,"lineChange": "none"},{"line": "        abortOnLimit: true,\n","lineNumber": 33,"lineChange": "none"},{"line": "        createParentPath: true\n","lineNumber": 34,"lineChange": "none"},{"line": "    }))\n","lineNumber": 35,"lineChange": "none"},{"line": "\n","lineNumber": 36,"lineChange": "none"},{"line": "    app.post('/api/upload', async (req, res) => {\n","lineNumber": 37,"lineChange": "none"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 37,"cwe": ["CWE-770"]}},{"id": "javascript/PT","name": "PT","shortDescription": {"text": "Path Traversal"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```","text": ""},"properties": {"tags": ["javascript","PT","Security","SourceServer","SourceHttpParam","<unknown>","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/iamfrntdv/adm-dev-kit/commit/8edeb067e703a642cb7ac7c88fb95fce8dd9c248?diff=split#diff-52baeef6a12dda5ae6078825eeb32958966ba6cbdd56792899f6273fecd26eabL-1","lines": [{"line": "const img = fs.readFileSync(filePath);\n","lineNumber": 7,"lineChange": "removed"},{"line": "res.end(img);\n","lineNumber": 8,"lineChange": "removed"},{"line": "res.sendFile(filePath, {root: './'});\n","lineNumber": 7,"lineChange": "added"}]},{"commitURL": "https://github.com/telekom/telements/commit/a9df3dc7d2274f59fa92a62cd0ea932af9ff703b?diff=split#diff-7266650a75fc58e629b4039a6109605b7e6b29d02f97a87ea33cdcfa3b514a95L-1","lines": [{"line": "const sanitize = require(\"sanitize-filename\");\n","lineNumber": 13,"lineChange": "added"},{"line": "\n","lineNumber": 14,"lineChange": "none"},{"line": "const PORT = 5005;\n","lineNumber": 15,"lineChange": "none"},{"line": "const app = express();\n","lineNumber": 16,"lineChange": "none"},{"line": "\n","lineNumber": 17,"lineChange": "none"},{"line": "app.engine(\n","lineNumber": 18,"lineChange": "none"},{"line": "  'hbs',\n","lineNumber": 19,"lineChange": "none"},{"line": "  handlebars({\n","lineNumber": 20,"lineChange": "none"},{"line": "    defaultLayout: 'main',\n","lineNumber": 21,"lineChange": "none"},{"line": "    extname: '.hbs',\n","lineNumber": 22,"lineChange": "none"},{"line": "  })\n","lineNumber": 23,"lineChange": "none"},{"line": ");\n","lineNumber": 24,"lineChange": "none"},{"line": "\n","lineNumber": 25,"lineChange": "none"},{"line": "app.set('view engine', 'hbs');\n","lineNumber": 26,"lineChange": "none"},{"line": "app.use(express.static('public'));\n","lineNumber": 27,"lineChange": "none"},{"line": "\n","lineNumber": 28,"lineChange": "none"},{"line": "app.get('/', (req, res) => {\n","lineNumber": 29,"lineChange": "none"},{"line": "  res.render('index');\n","lineNumber": 30,"lineChange": "none"},{"line": "});\n","lineNumber": 31,"lineChange": "none"},{"line": "\n","lineNumber": 32,"lineChange": "none"},{"line": "app.get('/:component', (req, res) => {\n","lineNumber": 33,"lineChange": "none"},{"line": "  try {\n","lineNumber": 34,"lineChange": "none"},{"line": "    res.render(req.params.component, {\n","lineNumber": 34,"lineChange": "removed"},{"line": "      title: req.params.component.replace(/^./, c => c.toUpperCase()),\n","lineNumber": 35,"lineChange": "removed"},{"line": "    res.render(sanitize(req.params.component), {\n","lineNumber": 35,"lineChange": "added"},{"line": "      title: sanitize(req.params.component)\n","lineNumber": 36,"lineChange": "added"},{"line": "        .replace(/-/g, ' ')\n","lineNumber": 37,"lineChange": "added"},{"line": "        .replace(/\\b\\w/g, (c) => c.toUpperCase()),\n","lineNumber": 38,"lineChange": "added"},{"line": "    });\n","lineNumber": 39,"lineChange": "none"}]},{"commitURL": "https://github.com/substack/shipboard/commit/e2722480410eea3f3d7b51730dcdea49df649cd2?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "    if (has(pages, req.url)) {\n","lineNumber": 14,"lineChange": "removed"},{"line": "    var p = req.url.split(/[#?]/)[0];\n","lineNumber": 9,"lineChange": "added"},{"line": "    if (p === '/') {\n","lineNumber": 10,"lineChange": "added"},{"line": "        html('layout.html').pipe(hyperstream({\n","lineNumber": 15,"lineChange": "none"},{"line": "            '#content': html(pages[req.url])\n","lineNumber": 16,"lineChange": "removed"},{"line": "            '[page=create]': html('create.html'),\n","lineNumber": 12,"lineChange": "added"},{"line": "            '[page=view]': html('view.html'),\n","lineNumber": 13,"lineChange": "added"},{"line": "            '[page=edit]': html('edit.html')\n","lineNumber": 14,"lineChange": "added"},{"line": "        })).pipe(res);\n","lineNumber": 17,"lineChange": "none"},{"line": "    }\n","lineNumber": 18,"lineChange": "none"},{"line": "    else st(req, res);\n","lineNumber": 19,"lineChange": "none"},{"line": "};\n","lineNumber": 20,"lineChange": "none"},{"line": "\n","lineNumber": 21,"lineChange": "none"},{"line": "function html (file) {\n","lineNumber": 22,"lineChange": "none"},{"line": "    return fs.createReadStream(path.join(__dirname, 'html', file));\n","lineNumber": 23,"lineChange": "none"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 204,"cwe": ["CWE-23"]}}]}},"results": [{"ruleId": "javascript/CodeInjection","ruleIndex": 0,"level": "error","message": {"text":"Unsanitized input from the HTTP request body flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.","arguments": ["[the HTTP request body](0)","[flows](1),(2),(3),(4),(5)","[eval](6)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":73,  "endLine":73,  "startColumn":20,  "endColumn":24}  }}],"fingerprints": {"identity": "8b7443b0-1fa8-4d59-b84f-3daed5028e70","0": "7601058e35374d9192af2251562ccdd97f228ad06afd7e909938f84a2546d9e1","1": "e0fda459.4773f344.8b18f948.93be4c77.53ad0462.8020cfdf.ea4b1c47.7d83f143.f759b1f9.4773f344.aa4dda5f.08906714.fd1fa73f.5fce695c.83265159.89d75565","snyk/asset/finding/v1": "8b7443b0-1fa8-4d59-b84f-3daed5028e70"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":70,  "endLine":70,  "startColumn":28,  "endColumn":32}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":70,  "endLine":70,  "startColumn":28,  "endColumn":32}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":70,  "endLine":70,  "startColumn":24,  "endColumn":32}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":70,  "endLine":70,  "startColumn":33,  "endColumn":37}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":70,  "endLine":70,  "startColumn":11,  "endColumn":21}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":73,  "endLine":73,  "startColumn":25,  "endColumn":35}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":73,  "endLine":73,  "startColumn":20,  "endColumn":24}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/CommandInjection","ruleIndex": 1,"level": "error","message": {"text":"Unsanitized input from the HTTP request body flows into child_process.exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. This may result in a Command Injection vulnerability.","arguments": ["[the HTTP request body](0)","[flows](1),(2),(3),(4),(5),(6)","[child_process.exec](7)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":5,  "endColumn":9}  }}],"fingerprints": {"1": "cf7733e4.4773f344.607187b5.0d836c53.bb43c50f.9c29a00e.cd61fc56.25f903e1.f759b1f9.4773f344.aa4dda5f.08906714.fd1fa73f.5fce695c.83265159.89d75565","snyk/asset/finding/v1": "234cb1d0-600c-4919-a341-cc393af8d707","identity": "234cb1d0-600c-4919-a341-cc393af8d707","0": "4d533ad2598168be40e5c2db6585e712ee0ba81a0eadc3a0f014476872216b66"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":25,  "endColumn":29}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":25,  "endColumn":29}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":21,  "endColumn":29}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":30,  "endColumn":37}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":11,  "endColumn":18}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":20,  "endColumn":27}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":10,  "endColumn":29}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":5,  "endColumn":9}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/XSS","ruleIndex": 2,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6)","[send](7)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":9,  "endColumn":13}  }}],"fingerprints": {"1": "cf7733e4.4773f344.a32ed1a1.84a399d8.ef9f7d82.8020cfdf.cd61fc56.2f05c567.62e40689.4773f344.a32ed1a1.c559ebce.42d5e751.5fce695c.83265159.3ba1c3a0","snyk/asset/finding/v1": "f584fdbf-5779-474d-9b80-45fb98201100","identity": "f584fdbf-5779-474d-9b80-45fb98201100","0": "a8d829ac3ccf05a1535f44982e3fb9053a738555188a69baa007f7cf41d7c1c7"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":22,  "endColumn":27}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":22,  "endColumn":27}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":18,  "endColumn":27}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":28,  "endColumn":32}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":42,  "endLine":42,  "startColumn":11,  "endColumn":15}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":29,  "endColumn":33}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":14,  "endColumn":41}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":45,  "endLine":45,  "startColumn":9,  "endColumn":13}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/reDOS","ruleIndex": 3,"level": "error","message": {"text":"Unsanitized user input from the request URL flows into match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).","markdown":"Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).","arguments": ["[the request URL](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)","[match](13)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":585,  "endLine":585,  "startColumn":18,  "endColumn":23}  }}],"fingerprints": {"identity": "f64ac216-bf64-47c9-811c-69c2487c13c9","0": "0666da924f49bfc815c46ab868b06c452de7b21ca5f4b63e72d26987c8cb853d","1": "d7b3d065.4773f344.126beb45.ed202363.ef9f7d82.37110c89.83265159.d5de5421.84a53940.277c621c.89af0168.1a7f4325.3f452f8c.8431f2ca.c08dd55c.53752168","snyk/asset/finding/v1": "f64ac216-bf64-47c9-811c-69c2487c13c9"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":173,  "endLine":173,  "startColumn":7,  "endColumn":18}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":173,  "endLine":173,  "startColumn":7,  "endColumn":18}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":173,  "endLine":173,  "startColumn":3,  "endColumn":18}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":173,  "endLine":173,  "startColumn":3,  "endColumn":6}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":213,  "endLine":213,  "startColumn":28,  "endColumn":31}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":537,  "endLine":537,  "startColumn":22,  "endColumn":25}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":539,  "endLine":539,  "startColumn":21,  "endColumn":24}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":539,  "endLine":539,  "startColumn":12,  "endColumn":20}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":539,  "endLine":539,  "startColumn":26,  "endColumn":34}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":213,  "endLine":213,  "startColumn":9,  "endColumn":13}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":226,  "endLine":226,  "startColumn":33,  "endColumn":37}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":583,  "endLine":583,  "startColumn":28,  "endColumn":32}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":585,  "endLine":585,  "startColumn":24,  "endColumn":28}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/router/index.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":585,  "endLine":585,  "startColumn":18,  "endColumn":23}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 756,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "python/PT","ruleIndex": 4,"level": "warning","message": {"text":"Unsanitized input from a command line argument flows into json.dump, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write arbitrary files.","arguments": ["[a command line argument](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)","[json.dump](13)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":9,  "endColumn":18}  }}],"fingerprints": {"0": "e527bb649eb754fd146e7d12a447001c856e3301c1c2f69e5e751e25a5f5f956","1": "2e8ddaeb.7ddb9c3b.187bf175.139c59a8.175c247b.111d979a.081ac3f4.545e9171.2e8ddaeb.e3d9b656.fe862df0.2beef486.927cebd1.111d979a.f6dc7859.f87593f4","snyk/asset/finding/v1": "4887fa77-3b28-4efe-aa88-dba43259b623","identity": "4887fa77-3b28-4efe-aa88-dba43259b623"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":58,  "endLine":58,  "startColumn":12,  "endColumn":29}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":58,  "endLine":58,  "startColumn":12,  "endColumn":29}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":58,  "endLine":58,  "startColumn":5,  "endColumn":31}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":61,  "endLine":61,  "startColumn":9,  "endColumn":13}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":61,  "endLine":61,  "startColumn":9,  "endColumn":23}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":26,  "endColumn":35}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":31,  "startColumn":36,  "endColumn":45}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":31,  "startColumn":16,  "endColumn":52}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":31,  "startColumn":5,  "endColumn":52}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":15,  "endColumn":23}}}},{"location": {"id": 10,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":10,  "endColumn":14}}}},{"location": {"id": 11,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":32,  "endLine":32,  "startColumn":33,  "endColumn":34}}}},{"location": {"id": 12,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":28,  "endColumn":29}}}},{"location": {"id": 13,"physicalLocation": {"artifactLocation": {  "uri": ".github/scripts/log-metrics.py",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":33,  "endLine":33,  "startColumn":9,  "endColumn":18}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/DisablePoweredBy","ruleIndex": 5,"level": "warning","message": {"text":"Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.","markdown":"Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.","arguments": ["[Express app](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":6,  "endLine":6,  "startColumn":13,  "endColumn":20}  }}],"fingerprints": {"snyk/asset/finding/v1": "dd096001-a0c8-421c-8f86-7428614b8d82","identity": "dd096001-a0c8-421c-8f86-7428614b8d82","0": "4c74102b6f204f01a329e214cba8092a9aa165ee596e63ed9b2dd1b99e0d6b2a","1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.62e40689.4773f344.aa4dda5f.d7919eeb.42d5e751.5fce695c.8cbf366e.3ba1c3a0"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":6,  "endLine":6,  "startColumn":13,  "endColumn":20}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HardcodedNonCryptoSecret","ruleIndex": 6,"level": "error","message": {"text":"Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.","markdown":"Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.","arguments": ["[a hardcoded string](0)","[here](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":10,  "endLine":10,  "startColumn":7,  "endColumn":14}  }}],"fingerprints": {"snyk/asset/finding/v1": "4da98f20-fb23-406e-a561-dcdcf645f6d5","identity": "4da98f20-fb23-406e-a561-dcdcf645f6d5","0": "92c659bc68b58a7e28671c62e306c0430ddd866ddf2507a7542ae355e66e7377","1": "ae77ea27.883ce888.ca07ea43.d7919eeb.d1312130.5fce695c.ea4b1c47.89d75565.ae77ea27.883ce888.ca07ea43.d7919eeb.d1312130.5fce695c.ea4b1c47.89d75565"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":10,  "endLine":10,  "startColumn":17,  "endColumn":38}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":10,  "endLine":10,  "startColumn":7,  "endColumn":14}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/HttpToHttps","ruleIndex": 7,"level": "warning","message": {"text":"http.createServer uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","markdown":"{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.","arguments": ["[http.createServer](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/application.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":634,  "endLine":634,  "startColumn":16,  "endColumn":33}  }}],"fingerprints": {"snyk/asset/finding/v1": "eb48c169-a67b-4c0c-81c4-01ec1534d209","identity": "eb48c169-a67b-4c0c-81c4-01ec1534d209","0": "c40e833e42241c975adbf0993bdd0282ea6083bb4e6fdae4dc4b9bd5b3704cb3","1": "aac70831.883ce888.b8d9fa19.d7919eeb.2fce9a75.6f0d36d4.cd61fc56.63ad1ad6.0423bc55.fba75ec3.607187b5.d7919eeb.968cbaba.5fce695c.3bc5ce02.89d75565"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "node_modules/express/lib/application.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":634,  "endLine":634,  "startColumn":16,  "endColumn":33}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 506,"priorityScoreFactors": [  {"label": true,"type": "hotFileCodeFlow"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/NoHardcodedPasswords","ruleIndex": 9,"level": "warning","message": {"text":"Do not hardcode passwords in code. Found hardcoded password used in DATABASE_PASSWORD.","markdown":"Do not hardcode passwords in code. Found hardcoded password used in {0}.","arguments": ["[DATABASE_PASSWORD](0)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":11,  "endLine":11,  "startColumn":7,  "endColumn":24}  }}],"fingerprints": {"snyk/asset/finding/v1": "d45285bb-30ae-45f0-a61e-503e3bea3695","identity": "d45285bb-30ae-45f0-a61e-503e3bea3695","0": "d529e100153c73876c5d2a01ba15b2779f8058c6faee755adf35d61994fa11b3","1": "ae77ea27.fb31f608.bd65d204.d7919eeb.79a7d027.5fce695c.ea4b1c47.9a05b657.ae77ea27.fb31f608.bd65d204.d7919eeb.79a7d027.5fce695c.ea4b1c47.9a05b657"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":11,  "endLine":11,  "startColumn":7,  "endColumn":24}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 556,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/NoRateLimitingForExpensiveWebOperation","ruleIndex": 10,"level": "warning","message": {"text":"Expensive operation (a system command execution) is performed by an endpoint handler which does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","markdown":"Expensive operation ({0}) is performed by {1} which does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","arguments": ["[a system command execution](0)","[an endpoint handler](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":38,  "startColumn":22,  "endColumn":2}  }}],"fingerprints": {"1": "ae77ea27.4773f344.aa4dda5f.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.cf7733e4.4773f344.aa4dda5f.c559ebce.fd1fa73f.5fce695c.83265159.2f05c567","snyk/asset/finding/v1": "154f87cb-b1d3-4e77-a7a4-b05f67833b55","identity": "154f87cb-b1d3-4e77-a7a4-b05f67833b55","0": "4795bd5d9734e5469708ac535ec7154bf4f4c1d8fadfa974d5f8d7df05b96356"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":35,  "endLine":35,  "startColumn":10,  "endColumn":29}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":31,  "endLine":38,  "startColumn":22,  "endColumn":2}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 562,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/NoRateLimitingForExpensiveWebOperation","ruleIndex": 10,"level": "warning","message": {"text":"Expensive operation (a file system operation) is performed by an endpoint handler which does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","markdown":"Expensive operation ({0}) is performed by {1} which does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.","arguments": ["[a file system operation](0)","[an endpoint handler](1)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":61,  "endLine":66,  "startColumn":18,  "endColumn":2}  }}],"fingerprints": {"0": "bd946e2268643b7042033eaba457cf605cb48983935a45bd6cb78e2da989b32f","1": "ae77ea27.4773f344.8b18f948.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.5fce695c.83265159.89d75565","snyk/asset/finding/v1": "daa9cd3a-b737-473f-a8c3-a5384aab4455","identity": "daa9cd3a-b737-473f-a8c3-a5384aab4455"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":65,  "endLine":65,  "startColumn":9,  "endColumn":17}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":61,  "endLine":66,  "startColumn":18,  "endColumn":2}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 562,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/PT","ruleIndex": 11,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into sendFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6)","[sendFile](7)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":65,  "endLine":65,  "startColumn":9,  "endColumn":17}  }}],"fingerprints": {"0": "980def8501efd9eec25949539b0e26541b59399a8a6572bca032f94976b0a55c","1": "bfc007a1.4773f344.d9fd6cba.d7919eeb.b263280c.8020cfdf.cd61fc56.2d2ea5fc.62e40689.4773f344.d9fd6cba.c559ebce.42d5e751.5fce695c.83265159.89d75565","snyk/asset/finding/v1": "20dfd32e-19ad-4137-8384-b35aa160aabe","identity": "20dfd32e-19ad-4137-8384-b35aa160aabe"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":62,  "endLine":62,  "startColumn":26,  "endColumn":31}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":62,  "endLine":62,  "startColumn":26,  "endColumn":31}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":62,  "endLine":62,  "startColumn":22,  "endColumn":31}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":62,  "endLine":62,  "startColumn":32,  "endColumn":36}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":62,  "endLine":62,  "startColumn":11,  "endColumn":19}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":65,  "endLine":65,  "startColumn":42,  "endColumn":50}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":65,  "endLine":65,  "startColumn":18,  "endColumn":50}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "src/vulnerable-app.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":65,  "endLine":65,  "startColumn":9,  "endColumn":17}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 806,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}}],"properties": {"coverage": [{"files": 1375,"isSupported": true,"lang": "JavaScript","type": "SUPPORTED"},{"files": 1,"isSupported": true,"lang": "Python","type": "SUPPORTED"},{"files": 98,"isSupported": true,"lang": "TypeScript","type": "SUPPORTED"}]}}]}