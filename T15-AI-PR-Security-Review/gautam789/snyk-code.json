{"$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json","version": "2.1.0","runs": [{"tool": {"driver" : {"name" : "SnykCode","semanticVersion" : "1.1298.3","version" : "1.1298.3","informationUri" : "https://docs.snyk.io/","rules" : [{"id": "javascript/CodeInjection","name": "CodeInjection","shortDescription": {"text": "Code Injection"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nA secure code injection attack occurs when the attacker exploits an existing input processing vulnerability, passing special characters and code directly to a web-based application or site. The code is then executed, potentially granting the user system access to export sensitive data, to install malware, or even to move laterally and to exploit other systems in the trusted internal network environment. While code injection attacks can take place in several ways, the common factor is allowing the user to submit executable code to the application. The most common forms of code injection are SQL injection (server side) and cross-site scripting (XSS) (client side).\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Apply least privilege principle (for example, limit users to read only wherever possible).\n- Avoid passing raw user input directly to functions; use parameterized queries to extract data first.\n- Sanitize user input strings of special characters such as ?, &, /, <, >, and quotation marks.\n- Use whitelisting of known good values.\n- Validate user input against expected response types.\n- Escape shell commands with functions such as shlex for Python, or escapeshellarg for PHP.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities so these cannot be exploited by code injection.\n- Educate all team members on safe data handling procedures to prevent attacks.","text": ""},"properties": {"tags": ["javascript","CodeInjection","Security","SourceServer","SourceHttpParam","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/lvn/botstrap/commit/aafeaca53e8d89eb950d8e9c3af8874dc90686ec?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "var config = require(configFile);\n","lineNumber": 17,"lineChange": "removed"},{"line": "var config = JSON.parse(fs.readFileSync(configFile));\n","lineNumber": 17,"lineChange": "added"}]},{"commitURL": "https://github.com/noppa/ng-hot-reload/commit/5de61299a0a7aa602fe015ac9f2ff3af3f798348?diff=split#diff-8f9d1530fa118465c523a517c5f4cac4ec173f17b820514034dc39e588415f63L-1","lines": [{"line": "var update = event.data;\r\n","lineNumber": 4,"lineChange": "removed"},{"line": "new Function(update)();\r\n","lineNumber": 5,"lineChange": "removed"},{"line": "var data = event.data ? JSON.parse(event.data) : {};\r\n","lineNumber": 4,"lineChange": "added"},{"line": "console.log('msg', data);\r\n","lineNumber": 5,"lineChange": "added"},{"line": "if (data.message === 'reload') {\r\n","lineNumber": 6,"lineChange": "added"},{"line": "    var script = document.createElement('script');\r\n","lineNumber": 7,"lineChange": "added"},{"line": "    var query = '?t=' + Date.now();\r\n","lineNumber": 8,"lineChange": "added"},{"line": "    script.src = 'http://localhost:' + options.port + '/' + data.src + query;\r\n","lineNumber": 9,"lineChange": "added"},{"line": "    document.body.appendChild(script);\r\n","lineNumber": 10,"lineChange": "added"},{"line": "}\r\n","lineNumber": 11,"lineChange": "added"}]},{"commitURL": "https://github.com/hizzgdev/jsmind/commit/8063742e591d7765a6c96a29b91af1ac4adeeba8?diff=split#diff-053107ea442600706ba811ac9afc51a58f7b9c86fa9f374b46c5c3c29a58287aL-1","lines": [{"line": "var data = eval('('+xhr.responseText+')');\n","lineNumber": 876,"lineChange": "removed"},{"line": "var data = jm.util.json.string2json(xhr.responseText);\n","lineNumber": 876,"lineChange": "added"},{"line": "if(data != null){\n","lineNumber": 877,"lineChange": "added"},{"line": "    callback(data);\n","lineNumber": 878,"lineChange": "none"},{"line": "}else{\n","lineNumber": 879,"lineChange": "added"},{"line": "    callback(xhr.responseText);\n","lineNumber": 880,"lineChange": "added"},{"line": "}\n","lineNumber": 881,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 149,"cwe": ["CWE-94"]}},{"id": "javascript/CommandInjection","name": "CommandInjection","shortDescription": {"text": "Command Injection"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nWith an OS command injection attack a web application user can pass commands directly to the system shell, attached to a legitimate request. These commands can then be executed on the application server, potentially leading to harmful consequences, including data exposure or deletion. Like code injection attacks, command injection attacks are essentially a failure of data validation. Unlike code injection attacks, which introduce new code, command injection attacks use existing system functions, often taking advantage of the application's unnecessarily high privilege level, increasing the risk of serious harm and reputational damage.\n\n## Best practices for prevention\n- Never trust user input. Assume any input may transmit harmful values.\n- Adopt the principle of least privilege: No application should have a greater access level than needed to run its required tasks.\n- Control user access policies on a task-by-task basis.\n- Don't pass user input directly to the system; use libraries or APIs that lack system access.\n- Where shell commands must be passed, escape values using functions like shlex for Python, or escapeshellarg() for PHP.\n- Sanitize user input with regular expressions to define permitted characters along with maximum string length.\n- Convert special characters such as `& |  ; $ > < \\ !` before passing to the server.\n- Whitelist permitted commands and validate user responses against these expectations.\n- Remember that code injection can take place on multiple fronts: GET and POST requests, but also cookies and HTTP headers.\n- Ensure up-to-date patching across all systems to remediate known vulnerabilities.\n- Educate all team members on safer data handling procedures to prevent attacks.","text": ""},"properties": {"tags": ["javascript","CommandInjection","Security","SourceServer","SourceHttpParam","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/mbostock/git-static/commit/89f5dcc9a74458f2956e6afd343beab4e5154472?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1","lines": [{"line": "  exec(\"git cat-file blob \" + sha + \":\" + file, {cwd: repository, encoding: \"binary\"}, function(error, stdout, stderr) {\n","lineNumber": 12,"lineChange": "removed"},{"line": "    if (error) return callback(error);\n","lineNumber": 13,"lineChange": "removed"},{"line": "    callback(null, stdout);\n","lineNumber": 14,"lineChange": "removed"},{"line": "  var git = child.spawn(\"git\", [\"cat-file\", \"blob\", sha + \":\" + file], {cwd: repository}),\n","lineNumber": 12,"lineChange": "added"},{"line": "      data = [],\n","lineNumber": 13,"lineChange": "added"},{"line": "      exit;\n","lineNumber": 14,"lineChange": "added"},{"line": "\n","lineNumber": 15,"lineChange": "added"},{"line": "  git.stdout.on(\"data\", function(chunk) {\n","lineNumber": 16,"lineChange": "added"},{"line": "    data.push(chunk);\n","lineNumber": 17,"lineChange": "added"},{"line": "  });\n","lineNumber": 18,"lineChange": "added"},{"line": "\n","lineNumber": 19,"lineChange": "added"},{"line": "  git.on(\"exit\", function(code) {\n","lineNumber": 20,"lineChange": "added"},{"line": "    exit = code;\n","lineNumber": 21,"lineChange": "added"},{"line": "  });\n","lineNumber": 22,"lineChange": "added"},{"line": "\n","lineNumber": 23,"lineChange": "added"},{"line": "  git.on(\"close\", function() {\n","lineNumber": 24,"lineChange": "added"},{"line": "    if (exit > 0) return callback(error(exit));\n","lineNumber": 25,"lineChange": "added"},{"line": "    callback(null, Buffer.concat(data));\n","lineNumber": 26,"lineChange": "added"}]},{"commitURL": "https://github.com/skpm/child_process/commit/ddf84f16469c6c1f57c6f15d1d4d77a3073ab8fe?diff=split#diff-572a16d586ad1b7c257729b47e3a55f30d627a31c81f5bd039a1a2d5201b665bL-1","lines": [{"line": "var whichChild = spawnSync('/bin/bash', ['-l', '-c', 'which ' + opts.file], {encoding: 'utf8'})\n","lineNumber": 9,"lineChange": "removed"},{"line": "var whichChild = spawnSync(\n","lineNumber": 9,"lineChange": "added"},{"line": "  '/bin/bash',\n","lineNumber": 10,"lineChange": "added"},{"line": "  ['-l', '-c', 'which ' + opts.file],\n","lineNumber": 11,"lineChange": "added"},{"line": "  { encoding: 'utf8' }\n","lineNumber": 12,"lineChange": "added"},{"line": ")\n","lineNumber": 13,"lineChange": "added"}]},{"commitURL": "https://github.com/andrehrf/hawk/commit/04d22c8199f0edd12f6df1eb4891702bfe91db6f?diff=split#diff-40a91579d9cf4bd2a35f59bcd5c8ab5ca53872990acb34aaed31acfb247bf184L-1","lines": [{"line": "case \"stats\": mongodb.collection(\"updaters\").update({\"_id\": id}, {$set: {\"pid\": thread.pid, \"stats\": data}}, function(err, result){}); break;\n","lineNumber": 106,"lineChange": "removed"},{"line": "case \"stats\": \n","lineNumber": 92,"lineChange": "added"},{"line": "    data[\"cpus\"] = require('os').cpus().length;   \n","lineNumber": 93,"lineChange": "added"},{"line": "    mongodb.collection(\"updaters\").update({\"_id\": id}, {$set: {\"pid\": thread.pid, \"stats\": data}}, function(err, result){}); \n","lineNumber": 94,"lineChange": "added"},{"line": "break;\n","lineNumber": 95,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 50,"cwe": ["CWE-78"]}},{"id": "javascript/DisablePoweredBy","name": "DisablePoweredBy","shortDescription": {"text": "Information Exposure"},"defaultConfiguration": {"level": "warning"},"help": {"markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n## Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.","text": ""},"properties": {"tags": ["javascript","DisablePoweredBy","Security"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/lucasweng/yelp-camp/commit/f4e907734aea3ec98000d61f5d49c729a95cb77c?diff=split#diff-e07d531ac040ce3f40e0ce632ac2a059d7cd60f20e61f78268ac3be015b3b28fL-1","lines": [{"line": "      app            = express(),\n","lineNumber": 1,"lineChange": "none"},{"line": "      bodyParser     = require(\"body-parser\"),\n","lineNumber": 2,"lineChange": "none"},{"line": "      mongoose       = require(\"mongoose\"),\n","lineNumber": 3,"lineChange": "none"},{"line": "      helmet         = require(\"helmet\"),\n","lineNumber": 4,"lineChange": "added"},{"line": "      flash          = require(\"connect-flash\"),\n","lineNumber": 5,"lineChange": "none"},{"line": "      session        = require(\"express-session\"),\n","lineNumber": 6,"lineChange": "none"},{"line": "      moment         = require(\"moment\"),\n","lineNumber": 7,"lineChange": "none"},{"line": "      passport       = require(\"passport\"),\n","lineNumber": 8,"lineChange": "none"},{"line": "      LocalStrategy  = require(\"passport-local\"),\n","lineNumber": 9,"lineChange": "none"},{"line": "      methodOverride = require(\"method-override\"),\n","lineNumber": 10,"lineChange": "none"},{"line": "      User           = require(\"./models/user\");\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "// requiring routes     \n","lineNumber": 13,"lineChange": "none"},{"line": "const indexRoute      = require(\"./routes/index\"),\n","lineNumber": 14,"lineChange": "none"},{"line": "      campgroundRoute = require(\"./routes/campgrounds\"),\n","lineNumber": 15,"lineChange": "none"},{"line": "      commentRoute    = require(\"./routes/comments\"),\n","lineNumber": 16,"lineChange": "none"},{"line": "      userRoute       = require(\"./routes/user\"),\n","lineNumber": 17,"lineChange": "none"},{"line": "      passwordRoute   = require(\"./routes/password\");\n","lineNumber": 18,"lineChange": "none"},{"line": "\n","lineNumber": 19,"lineChange": "none"},{"line": "// connect to the DB\n","lineNumber": 20,"lineChange": "none"},{"line": "let url = process.env.DATABASEURL || \"mongodb://localhost/yelp_camp_v13\"; // fallback in case global var not working\n","lineNumber": 21,"lineChange": "none"},{"line": "mongoose.connect(url, {useMongoClient: true});\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "app.set(\"view engine\", \"ejs\");\n","lineNumber": 24,"lineChange": "none"},{"line": "app.use(helmet());\n","lineNumber": 25,"lineChange": "added"}]},{"commitURL": "https://github.com/infor-design/enterprise/commit/20888f176d6bccc41b009a54b2d47a2b29845db3?diff=split#diff-322f0482bd28fc40f84fcb0aaf208fef7fb63082d462cf02d11f46e59c531c24L-1","lines": [{"line": "const app = express();\n","lineNumber": 9,"lineChange": "none"},{"line": "const BASE_PATH = process.env.BASEPATH || '/';\n","lineNumber": 10,"lineChange": "none"},{"line": "const packageJSON = getJSONFile('../../../package.json');\n","lineNumber": 11,"lineChange": "none"},{"line": "\n","lineNumber": 12,"lineChange": "none"},{"line": "app.set('view engine', 'html');\n","lineNumber": 13,"lineChange": "none"},{"line": "app.set('views', path.resolve(__dirname, 'views'));\n","lineNumber": 14,"lineChange": "none"},{"line": "app.set('basepath', BASE_PATH);\n","lineNumber": 15,"lineChange": "none"},{"line": "app.disable('x-powered-by');\n","lineNumber": 16,"lineChange": "added"}]},{"commitURL": "https://github.com/galtenberg/evernote-random/commit/32109271055df8a60bf4dafe289b717dbb950305?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L-1","lines": [{"line": "const csp = require('helmet-csp')\n","lineNumber": 5,"lineChange": "added"},{"line": "\n","lineNumber": 6,"lineChange": "none"},{"line": "const app = express()\n","lineNumber": 7,"lineChange": "none"},{"line": "\n","lineNumber": 8,"lineChange": "none"},{"line": "app.use(morgan(':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] :response-time ms'));\n","lineNumber": 9,"lineChange": "none"},{"line": "\n","lineNumber": 10,"lineChange": "none"},{"line": "// parse application/x-www-form-urlencoded\n","lineNumber": 11,"lineChange": "none"},{"line": "app.use(bodyParser.urlencoded({ extended: false }))\n","lineNumber": 12,"lineChange": "none"},{"line": "// json parser\n","lineNumber": 13,"lineChange": "none"},{"line": "app.use(bodyParser.json())\n","lineNumber": 14,"lineChange": "none"},{"line": "// Serve static assets\n","lineNumber": 15,"lineChange": "none"},{"line": "app.use(express.static(path.resolve(__dirname, '..', 'build')))\n","lineNumber": 15,"lineChange": "none"},{"line": "\n","lineNumber": 17,"lineChange": "none"},{"line": "// Re-enable on glitch.com\n","lineNumber": 18,"lineChange": "none"},{"line": "// Always return the main index.html, so react-router render the route in the client\n","lineNumber": 19,"lineChange": "none"},{"line": "//app.get('*', (req, res) => {\n","lineNumber": 19,"lineChange": "none"},{"line": "  //res.sendFile(path.resolve(__dirname, '..', 'build', 'index.html'));\n","lineNumber": 21,"lineChange": "none"},{"line": "//})\n","lineNumber": 22,"lineChange": "none"},{"line": "\n","lineNumber": 23,"lineChange": "none"},{"line": "app.use(cookieSession({\n","lineNumber": 24,"lineChange": "none"},{"line": "  name: 'evernoteSolitaire',\n","lineNumber": 25,"lineChange": "none"},{"line": "  secret: 'evernote-sandbox-secret',\n","lineNumber": 26,"lineChange": "none"},{"line": "  maxAge: 30 * 24 * 60 * 60 * 1000 // 1 month\n","lineNumber": 27,"lineChange": "none"},{"line": "}))\n","lineNumber": 28,"lineChange": "none"},{"line": "\n","lineNumber": 29,"lineChange": "none"},{"line": "//require('./api/experiment')(app)\n","lineNumber": 29,"lineChange": "none"},{"line": "require('./api/auth')(app)\n","lineNumber": 30,"lineChange": "none"},{"line": "require('./api/notes')(app)\n","lineNumber": 31,"lineChange": "none"},{"line": "\n","lineNumber": 32,"lineChange": "none"},{"line": "const PORT = process.env.PORT || 8000\n","lineNumber": 33,"lineChange": "removed"},{"line": "app.use(bodyParser.json({\n","lineNumber": 33,"lineChange": "added"},{"line": "  type: ['json', 'application/csp-report']\n","lineNumber": 34,"lineChange": "added"},{"line": "}))\n","lineNumber": 35,"lineChange": "added"},{"line": "\n","lineNumber": 36,"lineChange": "added"},{"line": "app.post('/report-violation', function (req, res) {\n","lineNumber": 37,"lineChange": "added"},{"line": "  if (req.body) {\n","lineNumber": 38,"lineChange": "added"},{"line": "    console.log('CSP Violation: ', req.body)\n","lineNumber": 39,"lineChange": "added"},{"line": "  } else {\n","lineNumber": 40,"lineChange": "added"},{"line": "    console.log('CSP Violation: No data received!')\n","lineNumber": 41,"lineChange": "added"},{"line": "  }\n","lineNumber": 42,"lineChange": "added"},{"line": "  res.status(204).end()\n","lineNumber": 43,"lineChange": "added"},{"line": "})\n","lineNumber": 44,"lineChange": "added"},{"line": "\n","lineNumber": 45,"lineChange": "added"},{"line": "const PORT = 8000 //process.env.PORT || 8000\n","lineNumber": 46,"lineChange": "added"},{"line": "\n","lineNumber": 47,"lineChange": "added"},{"line": "app.use(csp({\n","lineNumber": 48,"lineChange": "added"},{"line": "  directives: {\n","lineNumber": 49,"lineChange": "added"},{"line": "    defaultSrc: [\"'self'\"],\n","lineNumber": 50,"lineChange": "added"},{"line": "    scriptSrc: [\"'unsafe-inline'\"],\n","lineNumber": 51,"lineChange": "added"},{"line": "    styleSrc: [\"'unsafe-inline'\"],\n","lineNumber": 52,"lineChange": "added"},{"line": "    reportUri: '/report-violation',\n","lineNumber": 53,"lineChange": "added"},{"line": "    upgradeInsecureRequests: true\n","lineNumber": 54,"lineChange": "added"},{"line": "  },\n","lineNumber": 55,"lineChange": "added"},{"line": "  reportOnly: false,\n","lineNumber": 56,"lineChange": "added"},{"line": "  loose: true,\n","lineNumber": 57,"lineChange": "added"},{"line": "  setAllHeaders: true,\n","lineNumber": 58,"lineChange": "added"},{"line": "  browserSniff: false\n","lineNumber": 59,"lineChange": "added"},{"line": "}))\n","lineNumber": 60,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 416,"cwe": ["CWE-200"]}},{"id": "javascript/XSS","name": "XSS","shortDescription": {"text": "Cross-site Scripting (XSS)"},"defaultConfiguration": {"level": "error"},"help": {"markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.","text": ""},"properties": {"tags": ["javascript","XSS","Security","SourceServer","SourceHttpParam","Taint"],"categories": ["Security"],"exampleCommitFixes": [{"commitURL": "https://github.com/nategood/httpful/commit/56bece201beeae6d80ed23a1195f7ab685dfde0c?diff=split#diff-27153a4cc821a38fb1466ae1c19c9f48fdc8b5028f971c1f88fd3d36af3081d2L-1","lines": [{"line": "\n","lineNumber": 6,"lineChange": "removed"},{"line": "    res.writeHead(200);\n","lineNumber": 7,"lineChange": "removed"},{"line": "    res.writeHead(200, {\"Content-Type\":\"application/json\"});\n","lineNumber": 6,"lineChange": "added"},{"line": "    req.on('data', function(data){\n","lineNumber": 8,"lineChange": "none"},{"line": "        echo += data;\n","lineNumber": 9,"lineChange": "none"},{"line": "    });\n","lineNumber": 10,"lineChange": "none"},{"line": "    req.on('end', function(){\n","lineNumber": 11,"lineChange": "none"},{"line": "\t\tres.write(\n","lineNumber": 12,"lineChange": "none"},{"line": "\t\t\tJSON.stringify({\n","lineNumber": 13,"lineChange": "none"}]},{"commitURL": "https://github.com/mjackson/unpkg/commit/db53a296aafebe18b854a0da2d4e09fb39e2aca8?diff=split#diff-efedef52a9612fa34544d4ad8a68232d242c481eaa0de73b416064cf5c5c4cb6L-1","lines": [{"line": "    return res.status(403).send(`Invalid URL: ${req.url}`)\n","lineNumber": 21,"lineChange": "removed"},{"line": "    return res.status(403).type('text').send(`Invalid URL: ${req.url}`)\n","lineNumber": 21,"lineChange": "added"},{"line": "\n","lineNumber": 22,"lineChange": "none"},{"line": "  // Do not allow unrecognized query parameters because\n","lineNumber": 23,"lineChange": "none"},{"line": "  // some people use them to bust the cache.\n","lineNumber": 24,"lineChange": "none"},{"line": "  if (!queryIsValid(url.query))\n","lineNumber": 25,"lineChange": "none"},{"line": "    return res.status(403).send(`Invalid query: ${JSON.stringify(url.query)}`)\n","lineNumber": 26,"lineChange": "removed"},{"line": "    return res.status(403).type('text').send(`Invalid query: ${JSON.stringify(url.query)}`)\n","lineNumber": 26,"lineChange": "added"}]},{"commitURL": "https://github.com/angular-cms/angular-cms/commit/49e3845bf11f21e5f63997ed4c522cfa923c89a7?diff=split#diff-2458b7a314e52c34fd950457c17939524367c06572e8c78acfce08e6a6293e68L-1","lines": [{"line": "res.send(result);\n","lineNumber": 20,"lineChange": "removed"},{"line": "res.status(httpStatus.OK).json(result);\n","lineNumber": 21,"lineChange": "added"}]}],"exampleCommitDescriptions": [],"precision": "very-high","repoDatasetSize": 339,"cwe": ["CWE-79"]}}]}},"results": [{"ruleId": "javascript/CodeInjection","ruleIndex": 0,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is executed as JavaScript code. This may result in a Code Injection vulnerability.","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[eval](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":25,  "endColumn":35}  }}],"fingerprints": {"identity": "ae2bd16a-4b1b-4be5-b406-ff956d91f87d","0": "38e9c7261c2d985c1335a13efff54ba5ad57b62bb7607fed0e328262a2018ee9","1": "bfc007a1.4773f344.8b18f948.d7919eeb.d315965e.8020cfdf.ea4b1c47.f2fd8e89.29386b0b.4773f344.8b18f948.c559ebce.d315965e.8020cfdf.83265159.f2fd8e89","snyk/asset/finding/v1": "ae2bd16a-4b1b-4be5-b406-ff956d91f87d"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":20,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":20,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":16,  "endColumn":25}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":26,  "endColumn":30}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":9,  "endColumn":13}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":36,  "endColumn":40}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":12,  "endLine":12,  "startColumn":21,  "endColumn":26}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":15,  "endColumn":20}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":10,  "endColumn":14}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 820,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/CommandInjection","ruleIndex": 1,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into child_process.exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. This may result in a Command Injection vulnerability.","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[child_process.exec](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":8,  "endLine":8,  "startColumn":3,  "endColumn":13}  }}],"fingerprints": {"identity": "1b57d05a-8858-4663-8d21-24383d810b16","0": "7b1b21129e4b9662bfc0453fd98493d7871e0d15f6c246064e39583e2ce7a8b9","1": "dc45315e.4773f344.8b18f948.d7919eeb.326d0be0.8020cfdf.cd61fc56.d29e96f4.29386b0b.4773f344.8b18f948.c559ebce.326d0be0.8020cfdf.83265159.d29e96f4","snyk/asset/finding/v1": "1b57d05a-8858-4663-8d21-24383d810b16"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":25,  "endColumn":30}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":25,  "endColumn":30}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":21,  "endColumn":30}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":31,  "endColumn":34}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":7,  "endLine":7,  "startColumn":9,  "endColumn":18}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":8,  "endLine":8,  "startColumn":14,  "endColumn":23}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":4,  "endLine":4,  "startColumn":21,  "endColumn":24}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":5,  "endLine":5,  "startColumn":8,  "endColumn":11}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "utils.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":5,  "endLine":5,  "startColumn":3,  "endColumn":7}}}}]}]}],"properties": {"isAutofixable": false,"priorityScore": 820,"priorityScoreFactors": [  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/XSS","ruleIndex": 3,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6),(7),(8)","[send](9)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":14,  "endLine":14,  "startColumn":7,  "endColumn":11}  }}],"fingerprints": {"identity": "5a0841df-80f9-42ea-9889-abdc6ca7db99","0": "81c331c25aa31fa7ac7a01c6770dd197781a22fc66d2a83ba1e69b9960877abd","1": "cf7733e4.4773f344.a32ed1a1.84a399d8.ef9f7d82.8020cfdf.cd61fc56.2f05c567.cf7733e4.4773f344.a32ed1a1.c559ebce.8d22f254.39e5b116.83265159.2f05c567","snyk/asset/finding/v1": "5a0841df-80f9-42ea-9889-abdc6ca7db99"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":20,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":20,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":16,  "endColumn":25}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":26,  "endColumn":30}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":16,  "endColumn":30}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":16,  "endColumn":41}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":13,  "endLine":13,  "startColumn":9,  "endColumn":13}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":14,  "endLine":14,  "startColumn":25,  "endColumn":29}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":14,  "endLine":14,  "startColumn":12,  "endColumn":36}}}},{"location": {"id": 9,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":14,  "endLine":14,  "startColumn":7,  "endColumn":11}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 840,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}},{"ruleId": "javascript/XSS","ruleIndex": 3,"level": "error","message": {"text":"Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","markdown":"Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).","arguments": ["[an HTTP parameter](0)","[flows](1),(2),(3),(4),(5),(6),(7)","[send](8)"]},"locations": [{  "id": 0,  "physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":7,  "endColumn":11}  }}],"fingerprints": {"identity": "a8dae863-1f0b-4f15-b06f-fd0a8c1f348c","0": "c6ec98f252f03056dbe10fab302c221687d8c09c0fc8afbbdac58b222aebf9de","1": "8c41ef81.4773f344.a32ed1a1.1f018575.d315965e.8020cfdf.cd61fc56.2f05c567.29386b0b.4773f344.a32ed1a1.c559ebce.d315965e.8020cfdf.83265159.2f05c567","snyk/asset/finding/v1": "a8dae863-1f0b-4f15-b06f-fd0a8c1f348c"},"codeFlows": [{"threadFlows": [{"locations": [{"location": {"id": 0,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":20,  "endColumn":25}}}},{"location": {"id": 1,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":20,  "endColumn":25}}}},{"location": {"id": 2,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":16,  "endColumn":25}}}},{"location": {"id": 3,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":26,  "endColumn":30}}}},{"location": {"id": 4,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":19,  "endLine":19,  "startColumn":9,  "endColumn":13}}}},{"location": {"id": 5,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":36,  "endColumn":40}}}},{"location": {"id": 6,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":25,  "endColumn":35}}}},{"location": {"id": 7,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":12,  "endColumn":41}}}},{"location": {"id": 8,"physicalLocation": {"artifactLocation": {  "uri": "routes.js",  "uriBaseId": "%SRCROOT%"},"region": {  "startLine":20,  "endLine":20,  "startColumn":7,  "endColumn":11}}}}]}]}],"properties": {"isAutofixable": true,"priorityScore": 840,"priorityScoreFactors": [  {"label": true,"type": "multipleOccurrence"  },  {"label": true,"type": "hotFileSource"  },  {"label": true,"type": "fixExamples"  }]}}],"properties": {"coverage": [{"files": 3,"isSupported": true,"lang": "JavaScript","type": "SUPPORTED"}]}}]}
